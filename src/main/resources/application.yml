spring:
  application:
    name: libraryapi
  output:
    ansi:
      enabled: always
  datasource:
    url: jdbc:postgresql://localhost:5432/library
    username: ${USERNAME}
    password: ${PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}

logging:
  pattern:
    console: '%clr(%d{dd-MM-yyyy HH:mm:ss}){faint} %clr(%5p) %clr([%t]){faint} %clr(%-40.40logger){cyan} %clr(:){yellow} %m%n'
  file:
    name: app.log
  level:
    root: warn
    io:
      github:
        Psyllo: warn
    org:
      springframework:
        web: debug
        security: trace

#trace
#debug
#info
#warn
#error

management:
  server:
    port: 9090
  endpoints:
    web:
      exposure:
        include: '*'


springdoc:
  override-with-generic-response: false

#  A nível de estudo é interessante a utilização do ddl-auto, pois ele cria as tabelas sozinho sem a necessidade de scripts SQL
#  jpa:
#    show-sql: true
#    hibernate:
#      ddl-auto: update
